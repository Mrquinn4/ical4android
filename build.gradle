
buildscript {
    ext.kotlin_version = '1.1.3'

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    jcenter()
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.0'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'AllowBackup'
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    compile('org.mnode.ical4j:ical4j:2.0.0') {
        // we don't need content builders, see https://github.com/ical4j/ical4j/wiki/Groovy
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    compile 'org.slf4j:slf4j-jdk14:1.7.25'        // used by ical4j

    androidTestCompile 'com.android.support:support-annotations:26.+'
    androidTestCompile 'org.projectlombok:lombok:1.16.16'

    testCompile 'junit:junit:4.12'
    testCompile 'org.projectlombok:lombok:1.16.16'
}

// grant permissions for unit tests
task grantPermissions(dependsOn: 'installDebugAndroidTest') {
    doFirst {
        def adb = android.getAdbExe().toString()
        [
                'android.permission.READ_CALENDAR',
                'android.permission.WRITE_CALENDAR',
                'org.dmfs.permission.READ_TASKS',
                'org.dmfs.permission.WRITE_TASKS'
        ].each {
            "${adb} shell pm grant at.bitfire.ical4android.test ${it}".execute()
        }
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('connectedDebugAndroidTest')) {
        task.dependsOn grantPermissions
    }
}
