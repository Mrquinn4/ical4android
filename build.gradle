
buildscript {
    ext.kotlin_version = '1.2.21'
    ext.dokka_version = '0.9.15'

    repositories {
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:${dokka_version}"
    }
}

repositories {
    jcenter()
    maven {
        url "https://maven.google.com"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka-android'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'AllowBackup'
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
    }

    sourceSets {
        main.java.srcDirs = [ "src/main/java", "opentasks-contract/src/main/java" ]
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    compile 'org.mnode.ical4j:ical4j:2.1.5'
    compile 'org.slf4j:slf4j-jdk14:1.7.25'

    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'

    testCompile 'junit:junit:4.12'
    testCompileOnly 'org.projectlombok:lombok:1.16.20'
}

// grant permissions for unit tests
task grantPermissions(dependsOn: 'installDebugAndroidTest') {
    doFirst {
        def adb = android.getAdbExe().toString()

        // grant permissions
        [
                'android.permission.READ_CALENDAR',
                'android.permission.WRITE_CALENDAR',
                'org.dmfs.permission.READ_TASKS',
                'org.dmfs.permission.WRITE_TASKS'
        ].each {
            "${adb} shell pm grant at.bitfire.ical4android.test ${it}".execute()
        }
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('connectedDebugAndroidTest')) {
        task.dependsOn grantPermissions
    }
}
